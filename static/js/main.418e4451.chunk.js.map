{"version":3,"sources":["App.js","index.js"],"names":["GET_TODOS","gql","TOGGLE_TODO","ADD_TODO","DELETE_TODO","App","React","useState","todoText","setTodoText","useQuery","data","loading","error","useMutation","toggleTodo","onCompleted","addTodo","deleteTodo","a","id","done","variables","console","log","event","preventDefault","trim","text","refetchQueries","query","window","confirm","update","cache","newTodos","readQuery","todos","filter","todo","writeQuery","className","role","aria-label","onSubmit","type","placeholder","onChange","target","value","map","onDoubleClick","handleToggleTodo","key","onClick","handleDeleteTodo","client","ApolloClient","uri","ReactDOM","render","document","getElementById"],"mappings":"6iCAIA,IAAMA,EAAYC,YAAH,KAQTC,EAAcD,YAAH,KAUXE,EAAWF,YAAH,KAWRG,EAAcH,YAAH,KA0FFI,MAhFf,WAAgB,IAAD,EACmBC,IAAMC,SAAS,IADlC,mBACNC,EADM,KACIC,EADJ,OAEkBC,mBAASV,GAAjCW,EAFM,EAENA,KAAMC,EAFA,EAEAA,QAASC,EAFT,EAESA,MAFT,EAGQC,sBAAYZ,GAA1Ba,EAHM,sBAIKD,sBAAYX,EAAS,CACrCa,YAAa,kBAAMP,EAAY,OAD1BQ,EAJM,sBAOQH,sBAAYV,GAA1Bc,EAPM,gEASb,iCAAAC,EAAA,6DAAiCC,EAAjC,EAAiCA,GAAGC,EAApC,EAAoCA,KAApC,SACqBN,EAAW,CAACO,UAAW,CAACF,KAAIC,MAAOA,KADxD,OACQV,EADR,OAEEY,QAAQC,IAAI,eAAeb,GAF7B,4CATa,kEAcb,WAA6Bc,GAA7B,eAAAN,EAAA,yDACEM,EAAMC,iBACFlB,EAASmB,OAFf,iEAGqBV,EAAQ,CACzBK,UAAW,CAACM,KAAMpB,GAClBqB,eAAgB,CACd,CAACC,MAAO9B,MANd,OAGQW,EAHR,OASEY,QAAQC,IAAI,aAAab,GAT3B,4CAda,kEA2Bb,+BAAAQ,EAAA,yDAAiCC,EAAjC,EAAiCA,IACXW,OAAOC,QAAQ,oCADrC,gCAGuBd,EAAW,CAC5BI,UAAW,CAACF,MACZa,OAAQ,SAAAC,GACN,IACMC,EADWD,EAAME,UAAU,CAACN,MAAO9B,IACfqC,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKnB,KAAOA,KAC3Dc,EAAMM,WAAW,CAACV,MAAO9B,EAAWW,KAAM,CAAC0B,MAAOF,QAR1D,OAGUxB,EAHV,OAWIY,QAAQC,IAAIb,GAXhB,4CA3Ba,sBA0Cb,OAAGC,EAAgB,2CAChBC,EAAc,oEAGf,yBAAK4B,UAAU,oEACf,wBAAIA,UAAU,QAAd,oBACE,0BAAMC,KAAK,MAAMC,aAAW,aAA5B,WAIF,0BAAMC,SApDK,4CAoDoBH,UAAU,OACvC,2BACEA,UAAU,mBACVI,KAAK,OACLC,YAAY,uBACZC,SAAU,SAAAtB,GAAK,OAAIhB,EAAYgB,EAAMuB,OAAOC,QAC5CA,MAAOzC,IAET,4BAAQiC,UAAU,kBAAkBI,KAAK,UAAzC,WAEA,yBAAKJ,UAAU,gDACZ9B,EAAK0B,MAAMa,KAAI,SAAAX,GAAI,OAClB,uBAAGY,cAAe,kBAhEb,2CAgEmBC,CAAiBb,IAAOc,IAAKd,EAAKnB,IACxD,0BAAMqB,UAAS,8BAAyBF,EAAKlB,MAAQ,WAClDkB,EAAKX,MAER,4BAAQ0B,QAAS,kBApEd,2CAoEoBC,CAAiBhB,IAAOE,UAAU,yBACvD,0BAAMA,UAAU,OAAhB,gBC1GRe,EAAS,IAAIC,IAAa,CAC9BC,IAAK,sDAGPC,IAASC,OACP,kBAAC,iBAAD,CAAgBJ,OAAQA,GACtB,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.418e4451.chunk.js","sourcesContent":["import React from 'react';\nimport {useQuery, useMutation} from '@apollo/react-hooks';\nimport {gql} from 'apollo-boost';\n\nconst GET_TODOS = gql`query getTodos {\n  todos {\n    done\n    id\n    text\n    }\n  }`;\n\nconst TOGGLE_TODO = gql`mutation toggleTodo($id: uuid!, $done: Boolean!) {\n  update_todos(where: {id: {_eq: $id}}, _set: {done: $done}) {\n    returning {\n      done\n      id\n      text\n    }\n  }\n}`;\n\nconst ADD_TODO = gql`mutation addTodo($text: String!) {\n  insert_todos(objects: {text: $text}) {\n    returning {\n      done\n      id\n      text\n    }\n  }\n}`;\n\n\nconst DELETE_TODO = gql`mutation deleteTodo($id: uuid!) {\n  delete_todos(where: {id: {_eq: $id}}) {\n    returning {\n      done\n      id\n      text\n    }\n  }\n}`;\n\nfunction App() {\n  const [todoText, setTodoText] = React.useState('');\n  const {data, loading, error} = useQuery(GET_TODOS);\n  const [toggleTodo] = useMutation(TOGGLE_TODO);\n  const [addTodo] = useMutation(ADD_TODO,{\n    onCompleted: () => setTodoText('')\n  });\n  const [deleteTodo] = useMutation(DELETE_TODO);\n\n  async function handleToggleTodo({id,done}) {\n    const data = await toggleTodo({variables: {id, done: !done}})\n    console.log('toggled data',data);\n  }\n\n  async function handleAddTodo(event) {\n    event.preventDefault();\n    if(!todoText.trim()) return;\n    const data = await addTodo({\n      variables: {text: todoText},\n      refetchQueries: [\n        {query: GET_TODOS}\n      ]\n    });\n    console.log('added todo',data);\n    //setTodoText('');\n  }\n\n  async function handleDeleteTodo({id}) {\n    const isConfirmed = window.confirm(\"Do you want to delete this todo?\")\n    if(isConfirmed) {\n      const data = await deleteTodo({\n        variables: {id},\n        update: cache => {\n          const prevData = cache.readQuery({query: GET_TODOS});\n          const newTodos = prevData.todos.filter(todo => todo.id !== id);\n          cache.writeQuery({query: GET_TODOS, data: {todos: newTodos}});\n        }\n      });\n      console.log(data);\n    }\n  }\n\n  if(loading) return <div>Loading...</div>\n  if(error) return <div>Error in fetching todos (GET_TODOS)</div>\n\n  return (\n    <div className=\"vh-100 code flex flex-column items-center bg-blue white pa3 fl-1\">\n    <h1 className=\"f2-l\">GraphQL Checklist\n      <span role=\"img\" aria-label=\"Checkmark\">\n        âœ…\n      </span>\n    </h1>\n    <form onSubmit={handleAddTodo} className=\"mb3\">\n      <input\n        className=\"pa2 f4 b--dashed\"\n        type=\"text\"\n        placeholder=\"Write your task here\"\n        onChange={event => setTodoText(event.target.value)}\n        value={todoText}\n      />\n      <button className=\"pa2 f4 bg-green\" type=\"submit\">Create</button>\n    </form>\n      <div className=\"flex items-center justify-center flex-column\">\n        {data.todos.map(todo => (\n          <p onDoubleClick={() => handleToggleTodo(todo)} key={todo.id}>\n            <span className={`pointer list pa1 f3 ${todo.done && \"strike\"}`}>\n              {todo.text}\n            </span>\n            <button onClick={() => handleDeleteTodo(todo)} className=\"bg-transparent bn f4 \">\n              <span className=\"red\">\n                &times;\n              </span>\n            </button>\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from '@apollo/react-hooks';\n\nconst client = new ApolloClient({\n  uri: \"https://possible-oarfish-25.hasura.app/v1/graphql\"\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}